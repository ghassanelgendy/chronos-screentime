@startuml
class AnimatedChartFrame {
    update_chart()
        controller
    fig
    ax
    canvas
    ani
    __init__()
}
@enduml
@startuml
class AppMonitor {
    get_active_app_info()
    get_last_input_time()
    is_system_idle()
    start_tracking()
    stop_tracking()
    _app_tracking_loop()
    _idle_detection_loop()
    _handle_app_switch()
    _log_idle_session()
    update_idle_threshold()
    get_current_app_id()
        data_manager
    is_tracking
    current_app_id
    last_input_time
    idle_threshold
    idle_start
    lock
    is_tracking
    is_tracking
    idle_start
    current_app_id
    current_app_id
    idle_start
    idle_threshold
    __init__()
}
@enduml
@startuml
class CategoryManager {
    _init_default_categories()
    _load_categories_cache()
    _init_app_category_mappings()
    add_category()
    get_category()
    update_categories()
    get_all_categories()
    create_category()
    delete_category()
    get_apps_in_category()
    set_daily_limit()
    get_daily_limit()
        data_manager
    __init__()
}
@enduml
@startuml
class Controller {
    start_tracking()
    stop_tracking()
    _schedule_view_update()
    update_loop()
    _schedule_daily_updates()
    daily_update()
    _update_view_data()
    show_timeframe_data()
    export_data()
    update_categories()
    set_idle_threshold()
    get_motivational_message()
    schedule_auto_export()
    auto_export_task()
    shutdown()
        model
    view
    app_monitor
    is_running
    update_interval
    last_daily_update
    is_running
    is_running
    last_daily_update
    __init__()
}
@enduml
@startuml
class DataManager {
    _init_db()
    _get_connection()
    get_or_create_app()
    log_app_switch()
    log_idle_time()
    get_merged_sessions()
    update_daily_stats()
    get_time_based_data()
    get_total_idle_time()
    get_app_switch_count()
        __init__()
}
@enduml
@startuml
class Application {
    set_controller()
    relative_to_assets()
    setup_canvas()
    _update_view_loop()
    update_time_based_data()
    update_top_apps()
    update_stats()
    update_view()
    setup_canvas()
    create_buttons()
    setup_additional_buttons()
    create_button()
    create_buttons()
    run()
        controller
    window
    assets_path
    canvas
    total_time_label
    switch_count_label
    total_switch_count_label
    controller
    main_text
    main_text
    total_switches
    totaltime
    __init__()
}
@enduml
@startuml
@enduml
@startuml
class MotivationalMessageSystem {
    get_message()
        __init__()
}
@enduml
@startuml
class NotificationManager {
    show_break_notification()
    show_motivational_message()
        toaster
    __init__()
}
@enduml
@startuml
class Scheduler {
    start()
    _schedule_next()
    stop()
        controller
    interval
    timer
    timer
    __init__()
}
@enduml
